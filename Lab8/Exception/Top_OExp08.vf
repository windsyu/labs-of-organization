////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Top_OExp08.vf
// /___/   /\     Timestamp : 05/14/2019 15:40:09
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath C:/org/Exp08/Exception/Code -intstyle ise -family kintex7 -verilog C:/org/Exp08/Exception/Top_OExp08.vf -w C:/org/Exp08/Exception/Code/Top_OExp08.sch
//Design Name: Top_OExp08
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module alu_MUSER_Top_OExp08(A, 
                            ALU_operation, 
                            B, 
                            overflow, 
                            res, 
                            zero);

    input [31:0] A;
    input [2:0] ALU_operation;
    input [31:0] B;
   output overflow;
   output [31:0] res;
   output zero;
   
   wire N0;
   wire [32:0] S;
   wire [31:0] XLXN_2;
   wire [31:0] XLXN_3;
   wire [31:0] XLXN_17;
   wire [31:0] XLXN_19;
   wire [31:0] XLXN_22;
   wire [31:0] XLXN_23;
   wire [31:0] XLXN_24;
   wire [31:0] res_DUMMY;
   
   assign res[31:0] = res_DUMMY[31:0];
   ADC32  ADC_32 (.A(A[31:0]), 
                 .B(XLXN_3[31:0]), 
                 .C0(ALU_operation[2]), 
                 .S(S[32:0]));
   and32  ALU_U1 (.A(A[31:0]), 
                 .B(B[31:0]), 
                 .res(XLXN_17[31:0]));
   xor32  ALU_U3 (.A(A[31:0]), 
                 .B(B[31:0]), 
                 .res(XLXN_22[31:0]));
   nor32  ALU_U4 (.A(A[31:0]), 
                 .B(B[31:0]), 
                 .res(XLXN_23[31:0]));
   srl32  ALU_U5 (.A(A[31:0]), 
                 .B(B[31:0]), 
                 .res(XLXN_24[31:0]));
   xor32  ALU_U7 (.A(XLXN_2[31:0]), 
                 .B(B[31:0]), 
                 .res(XLXN_3[31:0]));
   or_bit_32  ALU_Zero (.A(res_DUMMY[31:0]), 
                       .o(zero));
   MUX8T1_32  MUXALU (.I0(XLXN_17[31:0]), 
                     .I1(XLXN_19[31:0]), 
                     .I2(S[31:0]), 
                     .I3(XLXN_22[31:0]), 
                     .I4(XLXN_23[31:0]), 
                     .I5(XLXN_24[31:0]), 
                     .I6(S[31:0]), 
                     .I7({N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, S[32]}), 
                     .s(ALU_operation[2:0]), 
                     .o(res_DUMMY[31:0]));
   SignalExt_32  SIignal1_32 (.S(ALU_operation[2]), 
                             .So(XLXN_2[31:0]));
   GND  XLXI_12 (.G(N0));
   or32  XLXI_13 (.A(A[31:0]), 
                 .B(B[31:0]), 
                 .res(XLXN_19[31:0]));
endmodule
`timescale 1ns / 1ps

module Data_path_more_MUSER_Top_OExp08(ALUSrc_B, 
                                       ALU_Control, 
                                       Branch, 
                                       clk, 
                                       DatatoReg, 
                                       Data_in, 
                                       eret, 
                                       inst_field, 
                                       INT, 
                                       Jal, 
                                       RegDst, 
                                       RegWrite, 
                                       rst, 
                                       ALU_out, 
                                       Data_out, 
                                       overflow, 
                                       PC_out, 
                                       zero);

    input ALUSrc_B;
    input [2:0] ALU_Control;
    input [1:0] Branch;
    input clk;
    input [1:0] DatatoReg;
    input [31:0] Data_in;
    input eret;
    input [25:0] inst_field;
    input INT;
    input Jal;
    input RegDst;
    input RegWrite;
    input rst;
   output [31:0] ALU_out;
   output [31:0] Data_out;
   output overflow;
   output [31:0] PC_out;
   output zero;
   
   wire [31:0] Imm;
   wire N0;
   wire [31:0] pc_4;
   wire V5;
   wire [31:0] XLXN_2;
   wire [31:0] XLXN_4;
   wire [4:0] XLXN_5;
   wire [31:0] XLXN_7;
   wire [31:0] XLXN_41;
   wire [31:0] XLXN_42;
   wire [4:0] XLXN_59;
   wire [31:0] XLXN_61;
   wire [31:0] ALU_out_DUMMY;
   wire [31:0] Data_out_DUMMY;
   wire [31:0] PC_out_DUMMY;
   
   assign ALU_out[31:0] = ALU_out_DUMMY[31:0];
   assign Data_out[31:0] = Data_out_DUMMY[31:0];
   assign PC_out[31:0] = PC_out_DUMMY[31:0];
   Regs  XLXI_1 (.clk(clk), 
                .L_S(RegWrite), 
                .rst(rst), 
                .R_addr_A(inst_field[25:21]), 
                .R_addr_B(inst_field[20:16]), 
                .Wt_addr(XLXN_5[4:0]), 
                .Wt_data(XLXN_4[31:0]), 
                .rdata_A(XLXN_7[31:0]), 
                .rdata_B(Data_out_DUMMY[31:0]));
   REG32  XLXI_2 (.CE(V5), 
                 .clk(clk), 
                 .D(XLXN_61[31:0]), 
                 .rst(rst), 
                 .Q(PC_out_DUMMY[31:0]));
   alu_MUSER_Top_OExp08  XLXI_3 (.A(XLXN_7[31:0]), 
                                .ALU_operation(ALU_Control[2:0]), 
                                .B(XLXN_2[31:0]), 
                                .overflow(overflow), 
                                .res(ALU_out_DUMMY[31:0]), 
                                .zero(zero));
   MUX2T1_32  XLXI_4 (.I0(Data_out_DUMMY[31:0]), 
                     .I1(Imm[31:0]), 
                     .s(ALUSrc_B), 
                     .o(XLXN_2[31:0]));
   Ext_32  XLXI_5 (.imm_16(inst_field[15:0]), 
                  .Imm_32(Imm[31:0]));
   MUX2T1_5  XLXI_7 (.I0(XLXN_59[4:0]), 
                    .I1(inst_field[15:11]), 
                    .s(RegDst), 
                    .o(XLXN_5[4:0]));
   add_32  XLXI_9 (.a(PC_out_DUMMY[31:0]), 
                  .b({N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, V5, N0, 
         N0}), 
                  .c(pc_4[31:0]));
   add_32  XLXI_10 (.a(pc_4[31:0]), 
                   .b({Imm[29:0], N0, N0}), 
                   .c(XLXN_41[31:0]));
   VCC  XLXI_13 (.P(V5));
   GND  XLXI_14 (.G(N0));
   MUX4T1_32  XLXI_15 (.I0(ALU_out_DUMMY[31:0]), 
                      .I1(Data_in[31:0]), 
                      .I2({inst_field[15:0], N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0}), 
                      .I3(pc_4[31:0]), 
                      .s(DatatoReg[1:0]), 
                      .o(XLXN_4[31:0]));
   MUX2T1_5  XLXI_17 (.I0(inst_field[20:16]), 
                     .I1({V5, V5, V5, V5, V5}), 
                     .s(Jal), 
                     .o(XLXN_59[4:0]));
   MUX4T1_32  XLXI_18 (.I0(pc_4[31:0]), 
                      .I1(XLXN_41[31:0]), 
                      .I2({pc_4[31:28], inst_field[25:0], N0, N0}), 
                      .I3(XLXN_7[31:0]), 
                      .s(Branch[1:0]), 
                      .o(XLXN_42[31:0]));
   Decode_Int  XLXI_19 (.clk(clk), 
                       .eret(eret), 
                       .INT(INT), 
                       .pc_next(XLXN_42[31:0]), 
                       .reset(rst), 
                       .pc(XLXN_61[31:0]));
endmodule
`timescale 1ns / 1ps

module SCPU_INT_MUSER_Top_OExp08(clk, 
                                 Data_in, 
                                 inst_in, 
                                 INT, 
                                 MIO_ready, 
                                 reset, 
                                 Addr_out, 
                                 CPU_MIO, 
                                 Data_out, 
                                 mem_w, 
                                 PC_out);

    input clk;
    input [31:0] Data_in;
    input [31:0] inst_in;
    input INT;
    input MIO_ready;
    input reset;
   output [31:0] Addr_out;
   output CPU_MIO;
   output [31:0] Data_out;
   output mem_w;
   output [31:0] PC_out;
   
   wire [1:0] Branch;
   wire [1:0] DatatoReg;
   wire Jal;
   wire [2:0] XLXN_1;
   wire XLXN_2;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_12;
   
   Data_path_INT  XLXI_9 (.ALUSrc_B(XLXN_7), 
                          .ALU_Control(XLXN_1[2:0]), 
                          .Branch(Branch[1:0]), 
                          .clk(clk), 
                          .DatatoReg(DatatoReg[1:0]), 
                          .Data_in(Data_in[31:0]), 
                          .eret(XLXN_12), 
                          .inst_field(inst_in[25:0]), 
                          .INT(INT), 
                          .Jal(Jal), 
                          .RegDst(XLXN_8), 
                          .RegWrite(XLXN_2), 
                          .rst(reset), 
                          .ALU_out(Addr_out[31:0]), 
                          .Data_out(Data_out[31:0]), 
                          .overflow(), 
                          .PC_out(PC_out[31:0]), 
                          .zero(XLXN_9));
   SCPU_ctrl_INT  XLXI_10 (.Fun(inst_in[5:0]), 
                           .int_code(inst_in[25]), 
                           .MIO_ready(MIO_ready), 
                           .OPcode(inst_in[31:26]), 
                           .zero(XLXN_9), 
                           .ALUSrc_B(XLXN_7), 
                           .ALU_Control(XLXN_1[2:0]), 
                           .Branch(Branch[1:0]), 
                           .CPU_MIO(CPU_MIO), 
                           .DatatoReg(DatatoReg[1:0]), 
                           .eret(XLXN_12), 
                           .Jal(Jal), 
                           .mem_w(mem_w), 
                           .RegDst(XLXN_8), 
                           .RegWrite(XLXN_2));
endmodule
`timescale 1ns / 1ps

module MC14495_ZJU_MUSER_Top_OExp08(D0, 
                                    D1, 
                                    D2, 
                                    D3, 
                                    LE, 
                                    point, 
                                    a, 
                                    b, 
                                    c, 
                                    d, 
                                    e, 
                                    f, 
                                    g, 
                                    p);

    input D0;
    input D1;
    input D2;
    input D3;
    input LE;
    input point;
   output a;
   output b;
   output c;
   output d;
   output e;
   output f;
   output g;
   output p;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_19;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_43;
   wire XLXN_44;
   wire XLXN_45;
   wire XLXN_46;
   wire XLXN_47;
   wire XLXN_48;
   wire XLXN_49;
   wire _D0;
   wire _D1;
   wire _D2;
   wire _D3;
   
   AND4  XLXI_1 (.I0(_D0), 
                .I1(_D1), 
                .I2(D2), 
                .I3(D3), 
                .O(XLXN_2));
   AND4  XLXI_2 (.I0(D0), 
                .I1(D1), 
                .I2(D2), 
                .I3(_D3), 
                .O(XLXN_1));
   AND4  XLXI_17 (.I0(D0), 
                 .I1(_D1), 
                 .I2(D2), 
                 .I3(_D3), 
                 .O(XLXN_15));
   AND4  XLXI_21 (.I0(D0), 
                 .I1(_D1), 
                 .I2(_D2), 
                 .I3(_D3), 
                 .O(XLXN_21));
   OR3  XLXI_22 (.I0(XLXN_2), 
                .I1(XLXN_1), 
                .I2(XLXN_3), 
                .O(XLXN_49));
   OR3  XLXI_23 (.I0(XLXN_8), 
                .I1(XLXN_7), 
                .I2(XLXN_9), 
                .O(XLXN_47));
   OR3  XLXI_24 (.I0(XLXN_13), 
                .I1(XLXN_12), 
                .I2(XLXN_17), 
                .O(XLXN_45));
   OR4  XLXI_25 (.I0(XLXN_4), 
                .I1(XLXN_5), 
                .I2(XLXN_6), 
                .I3(XLXN_19), 
                .O(XLXN_48));
   OR4  XLXI_26 (.I0(XLXN_10), 
                .I1(XLXN_11), 
                .I2(XLXN_22), 
                .I3(XLXN_21), 
                .O(XLXN_46));
   OR4  XLXI_27 (.I0(XLXN_16), 
                .I1(XLXN_17), 
                .I2(XLXN_14), 
                .I3(XLXN_15), 
                .O(XLXN_44));
   OR4  XLXI_28 (.I0(XLXN_18), 
                .I1(XLXN_19), 
                .I2(XLXN_22), 
                .I3(XLXN_21), 
                .O(XLXN_43));
   INV  XLXI_29 (.I(D3), 
                .O(_D3));
   INV  XLXI_30 (.I(D2), 
                .O(_D2));
   INV  XLXI_31 (.I(D1), 
                .O(_D1));
   INV  XLXI_32 (.I(D0), 
                .O(_D0));
   AND3  XLXI_33 (.I0(_D0), 
                 .I1(D1), 
                 .I2(D2), 
                 .O(XLXN_14));
   AND3  XLXI_34 (.I0(_D0), 
                 .I1(D2), 
                 .I2(D3), 
                 .O(XLXN_17));
   AND3  XLXI_35 (.I0(D0), 
                 .I1(D1), 
                 .I2(D3), 
                 .O(XLXN_16));
   AND3  XLXI_36 (.I0(D1), 
                 .I1(D2), 
                 .I2(D3), 
                 .O(XLXN_13));
   AND3  XLXI_37 (.I0(D0), 
                 .I1(D1), 
                 .I2(D2), 
                 .O(XLXN_11));
   AND3  XLXI_38 (.I0(D0), 
                 .I1(_D1), 
                 .I2(_D2), 
                 .O(XLXN_8));
   AND3  XLXI_39 (.I0(_D1), 
                 .I1(D2), 
                 .I2(_D3), 
                 .O(XLXN_7));
   AND2  XLXI_40 (.I0(D0), 
                 .I1(_D3), 
                 .O(XLXN_9));
   AND3  XLXI_41 (.I0(D0), 
                 .I1(_D2), 
                 .I2(_D3), 
                 .O(XLXN_6));
   AND3  XLXI_42 (.I0(D1), 
                 .I1(_D2), 
                 .I2(_D3), 
                 .O(XLXN_5));
   AND3  XLXI_43 (.I0(D0), 
                 .I1(D1), 
                 .I2(_D3), 
                 .O(XLXN_4));
   AND3  XLXI_44 (.I0(_D1), 
                 .I1(_D2), 
                 .I2(_D3), 
                 .O(XLXN_3));
   INV  XLXI_45 (.I(point), 
                .O(p));
   OR2  XLXI_46 (.I0(LE), 
                .I1(XLXN_49), 
                .O(g));
   OR2  XLXI_47 (.I0(LE), 
                .I1(XLXN_48), 
                .O(f));
   OR2  XLXI_48 (.I0(LE), 
                .I1(XLXN_47), 
                .O(e));
   OR2  XLXI_49 (.I0(LE), 
                .I1(XLXN_46), 
                .O(d));
   OR2  XLXI_50 (.I0(LE), 
                .I1(XLXN_45), 
                .O(c));
   OR2  XLXI_51 (.I0(LE), 
                .I1(XLXN_44), 
                .O(b));
   OR2  XLXI_52 (.I0(LE), 
                .I1(XLXN_43), 
                .O(a));
   AND4  XLXI_53 (.I0(D0), 
                 .I1(_D1), 
                 .I2(D2), 
                 .I3(D3), 
                 .O(XLXN_19));
   AND4  XLXI_55 (.I0(_D0), 
                 .I1(_D1), 
                 .I2(D2), 
                 .I3(_D3), 
                 .O(XLXN_22));
   AND4  XLXI_56 (.I0(D0), 
                 .I1(D1), 
                 .I2(_D2), 
                 .I3(D3), 
                 .O(XLXN_18));
   AND4  XLXI_57 (.I0(_D0), 
                 .I1(D1), 
                 .I2(_D2), 
                 .I3(_D3), 
                 .O(XLXN_12));
   AND4  XLXI_58 (.I0(_D0), 
                 .I1(D1), 
                 .I2(_D2), 
                 .I3(D3), 
                 .O(XLXN_10));
endmodule
`timescale 1ns / 1ps

module MUX4T1_4_MUSER_Top_OExp08(I0, 
                                 I1, 
                                 I2, 
                                 I3, 
                                 s, 
                                 o);

    input [3:0] I0;
    input [3:0] I1;
    input [3:0] I2;
    input [3:0] I3;
    input [1:0] s;
   output [3:0] o;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_9;
   wire XLXN_12;
   wire XLXN_51;
   wire XLXN_52;
   wire XLXN_58;
   wire XLXN_59;
   wire XLXN_61;
   wire XLXN_62;
   wire XLXN_73;
   wire XLXN_74;
   wire XLXN_76;
   wire XLXN_77;
   wire XLXN_78;
   wire XLXN_79;
   wire XLXN_81;
   wire XLXN_82;
   
   AND2  XLXI_1 (.I0(I0[0]), 
                .I1(XLXN_5), 
                .O(XLXN_1));
   AND2  XLXI_2 (.I0(I1[0]), 
                .I1(XLXN_6), 
                .O(XLXN_2));
   AND2  XLXI_3 (.I0(I2[0]), 
                .I1(XLXN_51), 
                .O(XLXN_3));
   AND2  XLXI_4 (.I0(I3[0]), 
                .I1(XLXN_52), 
                .O(XLXN_4));
   OR4  XLXI_5 (.I0(XLXN_4), 
               .I1(XLXN_3), 
               .I2(XLXN_2), 
               .I3(XLXN_1), 
               .O(o[0]));
   AND2  XLXI_6 (.I0(XLXN_12), 
                .I1(XLXN_9), 
                .O(XLXN_5));
   AND2  XLXI_7 (.I0(s[0]), 
                .I1(XLXN_9), 
                .O(XLXN_6));
   AND2  XLXI_8 (.I0(s[1]), 
                .I1(XLXN_12), 
                .O(XLXN_51));
   AND2  XLXI_9 (.I0(s[1]), 
                .I1(s[0]), 
                .O(XLXN_52));
   INV  XLXI_10 (.I(s[1]), 
                .O(XLXN_9));
   INV  XLXI_11 (.I(s[0]), 
                .O(XLXN_12));
   AND2  XLXI_17 (.I0(I0[1]), 
                 .I1(XLXN_5), 
                 .O(XLXN_58));
   AND2  XLXI_18 (.I0(I1[1]), 
                 .I1(XLXN_6), 
                 .O(XLXN_59));
   AND2  XLXI_19 (.I0(I2[1]), 
                 .I1(XLXN_51), 
                 .O(XLXN_61));
   AND2  XLXI_20 (.I0(I3[1]), 
                 .I1(XLXN_52), 
                 .O(XLXN_62));
   OR4  XLXI_21 (.I0(XLXN_62), 
                .I1(XLXN_61), 
                .I2(XLXN_59), 
                .I3(XLXN_58), 
                .O(o[1]));
   AND2  XLXI_32 (.I0(I0[2]), 
                 .I1(XLXN_5), 
                 .O(XLXN_73));
   AND2  XLXI_33 (.I0(I1[2]), 
                 .I1(XLXN_6), 
                 .O(XLXN_74));
   AND2  XLXI_34 (.I0(I2[2]), 
                 .I1(XLXN_51), 
                 .O(XLXN_76));
   AND2  XLXI_35 (.I0(I3[2]), 
                 .I1(XLXN_52), 
                 .O(XLXN_77));
   OR4  XLXI_36 (.I0(XLXN_77), 
                .I1(XLXN_76), 
                .I2(XLXN_74), 
                .I3(XLXN_73), 
                .O(o[2]));
   AND2  XLXI_37 (.I0(I0[3]), 
                 .I1(XLXN_5), 
                 .O(XLXN_78));
   AND2  XLXI_38 (.I0(I1[3]), 
                 .I1(XLXN_6), 
                 .O(XLXN_79));
   AND2  XLXI_39 (.I0(I2[3]), 
                 .I1(XLXN_51), 
                 .O(XLXN_81));
   AND2  XLXI_40 (.I0(I3[3]), 
                 .I1(XLXN_52), 
                 .O(XLXN_82));
   OR4  XLXI_41 (.I0(XLXN_82), 
                .I1(XLXN_81), 
                .I2(XLXN_79), 
                .I3(XLXN_78), 
                .O(o[3]));
endmodule
`timescale 1ns / 1ps

module MUX8T1_8_MUSER_Top_OExp08(I0, 
                                 I1, 
                                 I2, 
                                 I3, 
                                 I4, 
                                 I5, 
                                 I6, 
                                 I7, 
                                 s, 
                                 o);

    input [7:0] I0;
    input [7:0] I1;
    input [7:0] I2;
    input [7:0] I3;
    input [7:0] I4;
    input [7:0] I5;
    input [7:0] I6;
    input [7:0] I7;
    input [2:0] s;
   output [7:0] o;
   
   wire [3:0] o0;
   wire [3:0] o1;
   wire [3:0] o2;
   wire [3:0] o3;
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_26;
   
   MUX4T1_4_MUSER_Top_OExp08  XLXI_1 (.I0(I0[3:0]), 
                                     .I1(I1[3:0]), 
                                     .I2(I2[3:0]), 
                                     .I3(I3[3:0]), 
                                     .s(s[1:0]), 
                                     .o(o0[3:0]));
   MUX4T1_4_MUSER_Top_OExp08  XLXI_2 (.I0(I4[3:0]), 
                                     .I1(I5[3:0]), 
                                     .I2(I6[3:0]), 
                                     .I3(I7[3:0]), 
                                     .s(s[1:0]), 
                                     .o(o1[3:0]));
   INV  XLXI_5 (.I(s[2]), 
               .O(XLXN_26));
   AND2  XLXI_6 (.I0(o0[0]), 
                .I1(XLXN_26), 
                .O(XLXN_1));
   AND2  XLXI_7 (.I0(o1[0]), 
                .I1(s[2]), 
                .O(XLXN_2));
   AND2  XLXI_8 (.I0(o0[1]), 
                .I1(XLXN_26), 
                .O(XLXN_3));
   AND2  XLXI_9 (.I0(o1[1]), 
                .I1(s[2]), 
                .O(XLXN_4));
   AND2  XLXI_10 (.I0(o0[2]), 
                 .I1(XLXN_26), 
                 .O(XLXN_5));
   AND2  XLXI_11 (.I0(o1[2]), 
                 .I1(s[2]), 
                 .O(XLXN_6));
   AND2  XLXI_12 (.I0(o0[3]), 
                 .I1(XLXN_26), 
                 .O(XLXN_7));
   AND2  XLXI_13 (.I0(o1[3]), 
                 .I1(s[2]), 
                 .O(XLXN_8));
   AND2  XLXI_14 (.I0(o2[0]), 
                 .I1(XLXN_26), 
                 .O(XLXN_9));
   AND2  XLXI_15 (.I0(o3[0]), 
                 .I1(s[2]), 
                 .O(XLXN_10));
   AND2  XLXI_16 (.I0(o2[1]), 
                 .I1(XLXN_26), 
                 .O(XLXN_11));
   AND2  XLXI_17 (.I0(o3[1]), 
                 .I1(s[2]), 
                 .O(XLXN_12));
   AND2  XLXI_18 (.I0(o2[2]), 
                 .I1(XLXN_26), 
                 .O(XLXN_13));
   AND2  XLXI_19 (.I0(o3[2]), 
                 .I1(s[2]), 
                 .O(XLXN_14));
   AND2  XLXI_20 (.I0(o2[3]), 
                 .I1(XLXN_26), 
                 .O(XLXN_15));
   AND2  XLXI_21 (.I0(o3[3]), 
                 .I1(s[2]), 
                 .O(XLXN_16));
   OR2  XLXI_24 (.I0(XLXN_2), 
                .I1(XLXN_1), 
                .O(o[0]));
   OR2  XLXI_25 (.I0(XLXN_4), 
                .I1(XLXN_3), 
                .O(o[1]));
   OR2  XLXI_26 (.I0(XLXN_6), 
                .I1(XLXN_5), 
                .O(o[2]));
   OR2  XLXI_27 (.I0(XLXN_8), 
                .I1(XLXN_7), 
                .O(o[3]));
   OR2  XLXI_28 (.I0(XLXN_10), 
                .I1(XLXN_9), 
                .O(o[4]));
   OR2  XLXI_29 (.I0(XLXN_12), 
                .I1(XLXN_11), 
                .O(o[5]));
   OR2  XLXI_30 (.I0(XLXN_14), 
                .I1(XLXN_13), 
                .O(o[6]));
   OR2  XLXI_31 (.I0(XLXN_16), 
                .I1(XLXN_15), 
                .O(o[7]));
   MUX4T1_4_MUSER_Top_OExp08  XLXI_32 (.I0(I0[7:4]), 
                                      .I1(I1[7:4]), 
                                      .I2(I2[7:4]), 
                                      .I3(I3[7:4]), 
                                      .s(s[1:0]), 
                                      .o(o2[3:0]));
   MUX4T1_4_MUSER_Top_OExp08  XLXI_33 (.I0(I4[7:4]), 
                                      .I1(I5[7:4]), 
                                      .I2(I6[7:4]), 
                                      .I3(I7[7:4]), 
                                      .s(s[1:0]), 
                                      .o(o3[3:0]));
endmodule
`timescale 1ns / 1ps

module ScanSync_MUSER_Top_OExp08(Hexs, 
                                 LES, 
                                 point, 
                                 Scan, 
                                 AN, 
                                 Hexo, 
                                 LE, 
                                 p);

    input [31:0] Hexs;
    input [7:0] LES;
    input [7:0] point;
    input [2:0] Scan;
   output [3:0] AN;
   output [3:0] Hexo;
   output LE;
   output p;
   
   wire [7:0] COM;
   wire G0;
   wire [7:0] Hex;
   wire V5;
   
   VCC  XLXI_4 (.P(V5));
   GND  XLXI_5 (.G(G0));
   BUF  XLXI_6 (.I(COM[7]), 
               .O(LE));
   BUF  XLXI_7 (.I(COM[6]), 
               .O(p));
   MUX8T1_8_MUSER_Top_OExp08  XLXI_8 (.I0({Hexs[3:0], G0, G0, G0, G0}), 
                                     .I1({Hexs[7:4], G0, G0, G0, G0}), 
                                     .I2({Hexs[11:8], G0, G0, G0, G0}), 
                                     .I3({Hexs[15:12], G0, G0, G0, G0}), 
                                     .I4({Hexs[19:16], G0, G0, G0, G0}), 
                                     .I5({Hexs[23:20], G0, G0, G0, G0}), 
                                     .I6({Hexs[27:24], G0, G0, G0, G0}), 
                                     .I7({Hexs[31:28], G0, G0, G0, G0}), 
                                     .s(Scan[2:0]), 
                                     .o(Hex[7:0]));
   MUX8T1_8_MUSER_Top_OExp08  XLXI_9 (.I0({LES[0], point[0], G0, G0, V5, V5, 
         V5, G0}), 
                                     .I1({LES[1], point[1], G0, G0, V5, V5, G0, 
         V5}), 
                                     .I2({LES[2], point[2], G0, G0, V5, G0, V5, 
         V5}), 
                                     .I3({LES[3], point[3], G0, G0, G0, V5, V5, 
         V5}), 
                                     .I4({LES[4], point[4], G0, G0, V5, V5, V5, 
         G0}), 
                                     .I5({LES[5], point[5], G0, G0, V5, V5, G0, 
         V5}), 
                                     .I6({LES[6], point[6], G0, G0, V5, G0, V5, 
         V5}), 
                                     .I7({LES[7], point[7], G0, G0, G0, V5, V5, 
         V5}), 
                                     .s(Scan[2:0]), 
                                     .o(COM[7:0]));
   BUF  XLXI_12 (.I(COM[0]), 
                .O(AN[0]));
   BUF  XLXI_13 (.I(COM[1]), 
                .O(AN[1]));
   BUF  XLXI_14 (.I(COM[2]), 
                .O(AN[2]));
   BUF  XLXI_15 (.I(COM[3]), 
                .O(AN[3]));
   BUF  XLXI_16 (.I(Hex[7]), 
                .O(Hexo[3]));
   BUF  XLXI_17 (.I(Hex[6]), 
                .O(Hexo[2]));
   BUF  XLXI_18 (.I(Hex[5]), 
                .O(Hexo[1]));
   BUF  XLXI_19 (.I(Hex[4]), 
                .O(Hexo[0]));
endmodule
`timescale 1ns / 1ps

module Seg7_Dev_MUSER_Top_OExp08(flash, 
                                 Hexs, 
                                 LES, 
                                 point, 
                                 Scan, 
                                 SW0, 
                                 AN, 
                                 SEGMENT);

    input flash;
    input [31:0] Hexs;
    input [7:0] LES;
    input [7:0] point;
    input [2:0] Scan;
    input SW0;
   output [3:0] AN;
   output [7:0] SEGMENT;
   
   wire G0;
   wire [3:0] Hex;
   wire [7:0] Seg_map;
   wire [7:0] SEG_TXT;
   wire V5;
   wire XLXN_12;
   wire XLXN_19;
   wire XLXN_29;
   
   ScanSync_MUSER_Top_OExp08  XLXI_1 (.Hexs(Hexs[31:0]), 
                                     .LES(LES[7:0]), 
                                     .point(point[7:0]), 
                                     .Scan(Scan[2:0]), 
                                     .AN(AN[3:0]), 
                                     .Hexo(Hex[3:0]), 
                                     .LE(XLXN_19), 
                                     .p(XLXN_12));
   MC14495_ZJU_MUSER_Top_OExp08  XLXI_2 (.D0(Hex[0]), 
                                        .D1(Hex[1]), 
                                        .D2(Hex[2]), 
                                        .D3(Hex[3]), 
                                        .LE(XLXN_29), 
                                        .point(XLXN_12), 
                                        .a(SEG_TXT[0]), 
                                        .b(SEG_TXT[1]), 
                                        .c(SEG_TXT[2]), 
                                        .d(SEG_TXT[3]), 
                                        .e(SEG_TXT[4]), 
                                        .f(SEG_TXT[5]), 
                                        .g(SEG_TXT[6]), 
                                        .p(SEG_TXT[7]));
   AND2  XLXI_3 (.I0(XLXN_19), 
                .I1(flash), 
                .O(XLXN_29));
   Seg_map  XLXI_4 (.Hexs(Hexs[31:0]), 
                   .Scan(Scan[2:0]), 
                   .Seg_map(Seg_map[7:0]));
   VCC  XLXI_6 (.P(V5));
   GND  XLXI_7 (.G(G0));
   MUX2T1_8  XLXI_8 (.I0(Seg_map[7:0]), 
                    .I1(SEG_TXT[7:0]), 
                    .s(SW0), 
                    .o(SEGMENT[7:0]));
endmodule
`timescale 1ns / 1ps

module SSeg7_Dev_MUSER_Top_OExp08(clk, 
                                  flash, 
                                  Hexs, 
                                  LES, 
                                  point, 
                                  rst, 
                                  Start, 
                                  SW0, 
                                  seg_clk, 
                                  seg_clrn, 
                                  SEG_PEN, 
                                  seg_sout);

    input clk;
    input flash;
    input [31:0] Hexs;
    input [7:0] LES;
    input [7:0] point;
    input rst;
    input Start;
    input SW0;
   output seg_clk;
   output seg_clrn;
   output SEG_PEN;
   output seg_sout;
   
   wire [63:0] SEGMENT;
   wire [63:0] XLXN_4;
   wire [63:0] XLXN_5;
   
   SSeg_map  XLXI_1 (.Disp_num({Hexs[31:0], Hexs[31:0]}), 
                    .Seg_map(XLXN_5[63:0]));
   HexTo8SEG  XLXI_2 (.flash(flash), 
                     .Hexs(Hexs[31:0]), 
                     .LES(LES[7:0]), 
                     .points(point[7:0]), 
                     .SEG_TXT(XLXN_4[63:0]));
   MUX2T1_64  XLXI_3 (.a(XLXN_4[63:0]), 
                     .b(XLXN_5[63:0]), 
                     .sel(SW0), 
                     .o(SEGMENT[63:0]));
   P2S  XLXI_4 (.clk(clk), 
               .P_Data(SEGMENT[63:0]), 
               .rst(rst), 
               .Serial(Start), 
               .EN(SEG_PEN), 
               .sout(seg_sout), 
               .s_clk(seg_clk), 
               .s_clrn(seg_clrn));
endmodule
`timescale 1ns / 1ps

module Top_OExp08(BTN_y, 
                  clk_100mhz, 
                  RSTN, 
                  SW, 
                  AN, 
                  BTN_x, 
                  Buzzer, 
                  CR, 
                  LED, 
                  led_clk, 
                  led_clrn, 
                  LED_PEN, 
                  led_sout, 
                  RDY, 
                  readn, 
                  SEGMENT, 
                  seg_clk, 
                  seg_clrn, 
                  SEG_PEN, 
                  seg_sout);

    input [3:0] BTN_y;
    input clk_100mhz;
    input RSTN;
    input [15:0] SW;
   output [3:0] AN;
   output [4:0] BTN_x;
   output Buzzer;
   output CR;
   output [7:0] LED;
   output led_clk;
   output led_clrn;
   output LED_PEN;
   output led_sout;
   output RDY;
   output readn;
   output [7:0] SEGMENT;
   output seg_clk;
   output seg_clrn;
   output SEG_PEN;
   output seg_sout;
   
   wire [31:0] Addr_out;
   wire [31:0] Ai;
   wire [31:0] Bi;
   wire [7:0] blink;
   wire [3:0] BTN_OK;
   wire Clk_CPU;
   wire [31:0] Counter_out;
   wire [31:0] CPU2IO;
   wire [31:0] Data_in;
   wire [31:0] Data_out;
   wire [31:0] Disp_num;
   wire [31:0] Div;
   wire EN;
   wire GPIOF0;
   wire [31:0] inst;
   wire IO_clk;
   wire [15:0] LED_out;
   wire [7:0] LE_out;
   wire N0;
   wire [31:0] PC;
   wire [7:0] point_out;
   wire [3:0] Pulse;
   wire rst;
   wire [15:0] SW_OK;
   wire V5;
   wire WIRE;
   wire [4:0] XLXN_9;
   wire XLXN_69;
   wire [31:0] XLXN_99;
   wire [9:0] XLXN_105;
   wire [0:0] XLXN_110;
   wire [31:0] XLXN_115;
   wire XLXN_118;
   wire XLXN_149;
   wire XLXN_152;
   wire XLXN_153;
   wire [1:0] XLXN_161;
   wire RDY_DUMMY;
   wire readn_DUMMY;
   
   assign RDY = RDY_DUMMY;
   assign readn = readn_DUMMY;
   SEnter_2_32  M4 (.BTN(BTN_OK[2:0]), 
                   .clk(clk_100mhz), 
                   .Ctrl({SW_OK[7:5], SW_OK[15], SW_OK[0]}), 
                   .Din(XLXN_9[4:0]), 
                   .D_ready(RDY_DUMMY), 
                   .Ai(Ai[31:0]), 
                   .Bi(Bi[31:0]), 
                   .blink(blink[7:0]), 
                   .readn(readn_DUMMY));
   Multi_8CH32  U5 (.clk(IO_clk), 
                   .Data0(CPU2IO[31:0]), 
                   .data1({N0, N0, PC[31:2]}), 
                   .data2(inst[31:0]), 
                   .data3(Counter_out[31:0]), 
                   .data4(Addr_out[31:0]), 
                   .data5(Data_out[31:0]), 
                   .data6(Data_in[31:0]), 
                   .data7(PC[31:0]), 
                   .EN(EN), 
                   .LES({N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0}), 
                   .point_in({Div[31:0], Div[31:0]}), 
                   .rst(rst), 
                   .Test(SW_OK[7:5]), 
                   .Disp_num(Disp_num[31:0]), 
                   .LE_out(LE_out[7:0]), 
                   .point_out(point_out[7:0]));
   SSeg7_Dev_MUSER_Top_OExp08  U6 (.clk(clk_100mhz), 
                                  .flash(Div[25]), 
                                  .Hexs(Disp_num[31:0]), 
                                  .LES(LE_out[7:0]), 
                                  .point(point_out[7:0]), 
                                  .rst(rst), 
                                  .Start(Div[20]), 
                                  .SW0(SW_OK[0]), 
                                  .seg_clk(seg_clk), 
                                  .seg_clrn(seg_clrn), 
                                  .SEG_PEN(SEG_PEN), 
                                  .seg_sout(seg_sout));
   SPIO  U7 (.clk(IO_clk), 
            .EN(GPIOF0), 
            .P_Data(CPU2IO[31:0]), 
            .rst(rst), 
            .Start(Div[20]), 
            .counter_set(XLXN_161[1:0]), 
            .GPIOf0(), 
            .led_clk(led_clk), 
            .led_clrn(led_clrn), 
            .LED_out(LED_out[15:0]), 
            .LED_PEN(LED_PEN), 
            .led_sout(led_sout));
   clk_div  U8 (.clk(clk_100mhz), 
               .rst(rst), 
               .SW2(SW_OK[2]), 
               .clkdiv(Div[31:0]), 
               .Clk_CPU(Clk_CPU));
   SAnti_jitter  U9 (.clk(clk_100mhz), 
                    .Key_y(BTN_y[3:0]), 
                    .readn(readn_DUMMY), 
                    .RSTN(RSTN), 
                    .SW(SW[15:0]), 
                    .BTN_OK(BTN_OK[3:0]), 
                    .CR(CR), 
                    .Key_out(XLXN_9[4:0]), 
                    .Key_ready(RDY_DUMMY), 
                    .Key_x(BTN_x[4:0]), 
                    .pulse_out(Pulse[3:0]), 
                    .rst(rst), 
                    .SW_OK(SW_OK[15:0]));
   Seg7_Dev_MUSER_Top_OExp08  U61 (.flash(Div[25]), 
                                  .Hexs(Disp_num[31:0]), 
                                  .LES(LE_out[7:0]), 
                                  .point(point_out[7:0]), 
                                  .Scan({SW_OK[1], Div[19:18]}), 
                                  .SW0(SW_OK[0]), 
                                  .AN(AN[3:0]), 
                                  .SEGMENT(SEGMENT[7:0]));
   PIO  U71 (.clk(IO_clk), 
            .EN(GPIOF0), 
            .PData_in(CPU2IO[31:0]), 
            .rst(rst), 
            .counter_set(), 
            .GPIOf0(), 
            .LED_out(LED[7:0]));
   VCC  XLXI_9 (.P(V5));
   GND  XLXI_10 (.G(N0));
   INV  XLXI_11 (.I(clk_100mhz), 
                .O(XLXN_69));
   BUF  XLXI_19 (.I(V5), 
                .O(Buzzer));
   MIO_BUS  XLXI_22 (.addr_bus(Addr_out[31:0]), 
                    .BTN(BTN_OK[3:0]), 
                    .clk(clk_100mhz), 
                    .counter_out(Counter_out[31:0]), 
                    .counter0_out(WIRE), 
                    .counter1_out(XLXN_152), 
                    .counter2_out(XLXN_153), 
                    .Cpu_data2bus(Data_out[31:0]), 
                    .led_out(LED_out[15:0]), 
                    .mem_w(XLXN_118), 
                    .ram_data_out(XLXN_99[31:0]), 
                    .rst(rst), 
                    .SW(SW_OK[15:0]), 
                    .counter_we(XLXN_149), 
                    .Cpu_data4bus(Data_in[31:0]), 
                    .data_ram_we(XLXN_110[0]), 
                    .GPIOe0000000_we(EN), 
                    .GPIOf0000000_we(GPIOF0), 
                    .Peripheral_in(CPU2IO[31:0]), 
                    .ram_addr(XLXN_105[9:0]), 
                    .ram_data_in(XLXN_115[31:0]));
   Counter_x  XLXI_23 (.clk(IO_clk), 
                      .clk0(Div[6]), 
                      .clk1(Div[9]), 
                      .clk2(Div[11]), 
                      .counter_ch(XLXN_161[1:0]), 
                      .counter_val(CPU2IO[31:0]), 
                      .counter_we(XLXN_149), 
                      .rst(rst), 
                      .counter_out(Counter_out[31:0]), 
                      .counter0_OUT(WIRE), 
                      .counter1_OUT(XLXN_152), 
                      .counter2_OUT(XLXN_153));
   INV  XLXI_24 (.I(Clk_CPU), 
                .O(IO_clk));
   ROM_D  XLXI_26 (.a(PC[11:2]), 
                  .spo(inst[31:0]));
   RAM_B  XLXI_27 (.addra(XLXN_105[9:0]), 
                  .clka(XLXN_69), 
                  .dina(XLXN_115[31:0]), 
                  .wea(XLXN_110[0]), 
                  .douta(XLXN_99[31:0]));
   SCPU_INT_MUSER_Top_OExp08  XLXI_29 (.clk(Clk_CPU), 
                                      .Data_in(Data_in[31:0]), 
                                      .inst_in(inst[31:0]), 
                                      .INT(BTN_OK[0]), 
                                      .MIO_ready(), 
                                      .reset(rst), 
                                      .Addr_out(Addr_out[31:0]), 
                                      .CPU_MIO(), 
                                      .Data_out(Data_out[31:0]), 
                                      .mem_w(XLXN_118), 
                                      .PC_out(PC[31:0]));
endmodule
