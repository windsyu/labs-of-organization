////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : top.vf
// /___/   /\     Timestamp : 06/23/2017 14:06:59
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath E:/Berlin/OExp12-MSOC/ipcore_dir -intstyle ise -family kintex7 -verilog E:/Berlin/OExp12-MSOC/top.vf -w E:/Berlin/OExp12-MSOC/top.sch
//Design Name: top
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module MC14495_ZJU_MUSER_top(D0, 
                             D1, 
                             D2, 
                             D3, 
                             LE, 
                             point, 
                             a, 
                             b, 
                             c, 
                             d, 
                             e, 
                             f, 
                             g, 
                             p);

    input D0;
    input D1;
    input D2;
    input D3;
    input LE;
    input point;
   output a;
   output b;
   output c;
   output d;
   output e;
   output f;
   output g;
   output p;
   
   wire XLXN_14;
   wire XLXN_24;
   wire XLXN_26;
   wire XLXN_27;
   wire XLXN_28;
   wire XLXN_61;
   wire XLXN_62;
   wire XLXN_72;
   wire XLXN_73;
   wire XLXN_74;
   wire XLXN_75;
   wire XLXN_111;
   wire XLXN_115;
   wire XLXN_119;
   wire XLXN_140;
   wire XLXN_141;
   wire XLXN_170;
   wire XLXN_171;
   wire XLXN_172;
   wire XLXN_184;
   wire XLXN_185;
   wire XLXN_186;
   wire XLXN_200;
   wire XLXN_201;
   wire XLXN_202;
   wire XLXN_208;
   wire XLXN_209;
   wire XLXN_210;
   wire XLXN_211;
   wire XLXN_212;
   wire XLXN_213;
   wire XLXN_214;
   
   INV  XLXI_1 (.I(D3), 
               .O(XLXN_14));
   INV  XLXI_2 (.I(D2), 
               .O(XLXN_61));
   INV  XLXI_3 (.I(D1), 
               .O(XLXN_62));
   INV  XLXI_4 (.I(D0), 
               .O(XLXN_24));
   AND4  XLXI_5 (.I0(D0), 
                .I1(XLXN_61), 
                .I2(XLXN_62), 
                .I3(XLXN_14), 
                .O(XLXN_119));
   AND4  XLXI_6 (.I0(XLXN_24), 
                .I1(XLXN_62), 
                .I2(D2), 
                .I3(XLXN_14), 
                .O(XLXN_26));
   AND4  XLXI_7 (.I0(D0), 
                .I1(XLXN_62), 
                .I2(D2), 
                .I3(D3), 
                .O(XLXN_27));
   AND4  XLXI_8 (.I0(D0), 
                .I1(D1), 
                .I2(XLXN_61), 
                .I3(D3), 
                .O(XLXN_28));
   OR4  XLXI_17 (.I0(XLXN_28), 
                .I1(XLXN_27), 
                .I2(XLXN_26), 
                .I3(XLXN_119), 
                .O(XLXN_208));
   AND4  XLXI_18 (.I0(D0), 
                 .I1(XLXN_62), 
                 .I2(D2), 
                 .I3(XLXN_14), 
                 .O(XLXN_72));
   AND3  XLXI_19 (.I0(XLXN_24), 
                 .I1(D1), 
                 .I2(D2), 
                 .O(XLXN_73));
   AND3  XLXI_20 (.I0(XLXN_24), 
                 .I1(D2), 
                 .I2(D3), 
                 .O(XLXN_74));
   AND3  XLXI_21 (.I0(D0), 
                 .I1(D1), 
                 .I2(D3), 
                 .O(XLXN_75));
   OR4  XLXI_22 (.I0(XLXN_75), 
                .I1(XLXN_74), 
                .I2(XLXN_73), 
                .I3(XLXN_72), 
                .O(XLXN_209));
   AND4  XLXI_23 (.I0(XLXN_24), 
                 .I1(D1), 
                 .I2(XLXN_61), 
                 .I3(XLXN_14), 
                 .O(XLXN_111));
   AND3  XLXI_24 (.I0(D1), 
                 .I1(D2), 
                 .I2(D3), 
                 .O(XLXN_115));
   OR3  XLXI_26 (.I0(XLXN_115), 
                .I1(XLXN_111), 
                .I2(XLXN_74), 
                .O(XLXN_210));
   AND3  XLXI_27 (.I0(D0), 
                 .I1(D1), 
                 .I2(D2), 
                 .O(XLXN_140));
   AND4  XLXI_28 (.I0(XLXN_24), 
                 .I1(D1), 
                 .I2(XLXN_61), 
                 .I3(D3), 
                 .O(XLXN_141));
   OR4  XLXI_29 (.I0(XLXN_141), 
                .I1(XLXN_140), 
                .I2(XLXN_26), 
                .I3(XLXN_119), 
                .O(XLXN_211));
   AND3  XLXI_30 (.I0(XLXN_62), 
                 .I1(D2), 
                 .I2(XLXN_14), 
                 .O(XLXN_171));
   AND2  XLXI_32 (.I0(D0), 
                 .I1(XLXN_14), 
                 .O(XLXN_170));
   AND3  XLXI_35 (.I0(D0), 
                 .I1(XLXN_62), 
                 .I2(XLXN_61), 
                 .O(XLXN_172));
   OR3  XLXI_36 (.I0(XLXN_172), 
                .I1(XLXN_171), 
                .I2(XLXN_170), 
                .O(XLXN_212));
   AND3  XLXI_37 (.I0(D0), 
                 .I1(XLXN_61), 
                 .I2(XLXN_14), 
                 .O(XLXN_184));
   AND3  XLXI_38 (.I0(D1), 
                 .I1(XLXN_61), 
                 .I2(XLXN_14), 
                 .O(XLXN_185));
   AND3  XLXI_39 (.I0(D0), 
                 .I1(D1), 
                 .I2(XLXN_14), 
                 .O(XLXN_186));
   OR4  XLXI_41 (.I0(XLXN_186), 
                .I1(XLXN_185), 
                .I2(XLXN_184), 
                .I3(XLXN_27), 
                .O(XLXN_213));
   AND3  XLXI_42 (.I0(XLXN_62), 
                 .I1(XLXN_61), 
                 .I2(XLXN_14), 
                 .O(XLXN_200));
   AND4  XLXI_43 (.I0(D0), 
                 .I1(D1), 
                 .I2(D2), 
                 .I3(XLXN_14), 
                 .O(XLXN_201));
   AND4  XLXI_44 (.I0(XLXN_24), 
                 .I1(XLXN_62), 
                 .I2(D2), 
                 .I3(D3), 
                 .O(XLXN_202));
   OR3  XLXI_46 (.I0(XLXN_202), 
                .I1(XLXN_201), 
                .I2(XLXN_200), 
                .O(XLXN_214));
   OR2  XLXI_47 (.I0(LE), 
                .I1(XLXN_208), 
                .O(a));
   OR2  XLXI_48 (.I0(LE), 
                .I1(XLXN_209), 
                .O(b));
   OR2  XLXI_49 (.I0(LE), 
                .I1(XLXN_210), 
                .O(c));
   OR2  XLXI_50 (.I0(LE), 
                .I1(XLXN_211), 
                .O(d));
   OR2  XLXI_51 (.I0(LE), 
                .I1(XLXN_212), 
                .O(e));
   OR2  XLXI_52 (.I0(LE), 
                .I1(XLXN_213), 
                .O(f));
   OR2  XLXI_53 (.I0(LE), 
                .I1(XLXN_214), 
                .O(g));
   INV  XLXI_57 (.I(point), 
                .O(p));
endmodule
`timescale 1ns / 1ps

module Seg7_Dev_MUSER_top(flash, 
                          Hexs, 
                          LES, 
                          point, 
                          Scan, 
                          SW0, 
                          AN, 
                          SEGMENT);

    input flash;
    input [31:0] Hexs;
    input [7:0] LES;
    input [7:0] point;
    input [2:0] Scan;
    input SW0;
   output [3:0] AN;
   output [7:0] SEGMENT;
   
   wire G0;
   wire [3:0] Hex;
   wire LE;
   wire point0;
   wire [7:0] SEG_TXT;
   wire V5;
   wire XLXN_4;
   wire [7:0] XLXN_24;
   
   MUX2T1_8  MUXSH2M (.I0(XLXN_24[7:0]), 
                     .I1(SEG_TXT[7:0]), 
                     .s(SW0), 
                     .o(SEGMENT[7:0]));
   MC14495_ZJU_MUSER_top  M1 (.D0(Hex[0]), 
                             .D1(Hex[1]), 
                             .D2(Hex[2]), 
                             .D3(Hex[3]), 
                             .LE(LE), 
                             .point(point0), 
                             .a(SEG_TXT[0]), 
                             .b(SEG_TXT[1]), 
                             .c(SEG_TXT[2]), 
                             .d(SEG_TXT[3]), 
                             .e(SEG_TXT[4]), 
                             .f(SEG_TXT[5]), 
                             .g(SEG_TXT[6]), 
                             .p(SEG_TXT[7]));
   ScanSync  M2 (.Hexs(Hexs[31:0]), 
                .LES(LES[7:0]), 
                .point(point[7:0]), 
                .Scan(Scan[2:0]), 
                .AN(AN[3:0]), 
                .Hexo(Hex[3:0]), 
                .LE(XLXN_4), 
                .p(point0));
   Seg_map  M3 (.Hexs(Hexs[31:0]), 
               .Scan(Scan[2:0]), 
               .Seg_map(XLXN_24[7:0]));
   AND2  XLXI_8 (.I0(XLXN_4), 
                .I1(flash), 
                .O(LE));
   GND  XLXI_9 (.G(G0));
   VCC  XLXI_11 (.P(V5));
endmodule
`timescale 1ns / 1ps

module SSeg7_Dev_MUSER_top(clk, 
                           flash, 
                           Hexs, 
                           LES, 
                           point, 
                           rst, 
                           Start, 
                           SW0, 
                           seg_clk, 
                           seg_clrn, 
                           SEG_PEN, 
                           seg_sout);

    input clk;
    input flash;
    input [31:0] Hexs;
    input [7:0] LES;
    input [7:0] point;
    input rst;
    input Start;
    input SW0;
   output seg_clk;
   output seg_clrn;
   output SEG_PEN;
   output seg_sout;
   
   wire [63:0] SEGMENT;
   wire [63:0] XLXN_2;
   wire [63:0] XLXN_32;
   
   MUX2T1_64  MAXSH2M (.a(XLXN_32[63:0]), 
                      .b(XLXN_2[63:0]), 
                      .sel(SW0), 
                      .o(SEGMENT[63:0]));
   P2S  M2 (.clk(clk), 
           .P_Data(SEGMENT[63:0]), 
           .rst(rst), 
           .Serial(Start), 
           .EN(SEG_PEN), 
           .sout(seg_sout), 
           .s_clk(seg_clk), 
           .s_clrn(seg_clrn));
   HexTo8SEG  SM1 (.flash(flash), 
                  .Hexs(Hexs[31:0]), 
                  .LES(LES[7:0]), 
                  .point(point[7:0]), 
                  .SEG_TXT(XLXN_32[63:0]));
   SSeg_map  SM3 (.Disp_num({Hexs[31:0], Hexs[31:0]}), 
                 .Seg_map(XLXN_2[63:0]));
endmodule
`timescale 1ns / 1ps

module top(BTN_y, 
           clk_100mhz, 
           RSTN, 
           SW, 
           AN, 
           BTN_x, 
           Buzzer, 
           CR, 
           LED, 
           led_clk, 
           led_clrn, 
           LED_PEN, 
           led_sout, 
           RDY, 
           readn, 
           SEGMENT, 
           seg_clk, 
           seg_clrn, 
           SEG_PEN, 
           seg_sout);

    input [3:0] BTN_y;
    input clk_100mhz;
    input RSTN;
    input [15:0] SW;
   output [3:0] AN;
   output [4:0] BTN_x;
   output Buzzer;
   output CR;
   output [7:0] LED;
   output led_clk;
   output led_clrn;
   output LED_PEN;
   output led_sout;
   output RDY;
   output readn;
   output [7:0] SEGMENT;
   output seg_clk;
   output seg_clrn;
   output SEG_PEN;
   output seg_sout;
   
   wire [31:0] Addr_out;
   wire [31:0] Bi;
   wire [7:0] blink;
   wire [3:0] BTN_OK;
   wire Clk_CPU;
   wire [31:0] Counter_out;
   wire [31:0] CPI2IO;
   wire [31:0] CPU2IO;
   wire [31:0] Data_in;
   wire [31:0] Data_out;
   wire [31:0] Disp_num;
   wire [31:0] Div;
   wire GPIOF0;
   wire [31:0] inst;
   wire IO_clk;
   wire [15:0] LED_out;
   wire [7:0] LE_out;
   wire N0;
   wire [31:0] PC;
   wire [7:0] point_out;
   wire [3:0] Pulse;
   wire rst;
   wire [4:0] State;
   wire [15:0] SW_OK;
   wire V5;
   wire [4:0] XLXN_29;
   wire XLXN_443;
   wire XLXN_469;
   wire XLXN_470;
   wire XLXN_472;
   wire [1:0] XLXN_491;
   wire XLXN_497;
   wire XLXN_524;
   wire [31:0] XLXN_525;
   wire [9:0] XLXN_526;
   wire [0:0] XLXN_527;
   wire [31:0] XLXN_529;
   wire RDY_DUMMY;
   wire readn_DUMMY;
   
   assign RDY = RDY_DUMMY;
   assign readn = readn_DUMMY;
   SEnter_2_32  M4 (.BTN(BTN_OK[2:0]), 
                   .clk(clk_100mhz), 
                   .Ctrl({SW_OK[7:5], SW_OK[15], SW_OK[0]}), 
                   .Din(XLXN_29[4:0]), 
                   .D_ready(RDY_DUMMY), 
                   .Ai(CPU2IO[31:0]), 
                   .Bi(Bi[31:0]), 
                   .blink(blink[7:0]), 
                   .readn(readn_DUMMY));
   Multi_CPU  U1 (.clk(Clk_CPU), 
                 .Data_in(Data_in[31:0]), 
                 .INT(XLXN_497), 
                 .MIO_ready(V5), 
                 .reset(rst), 
                 .Addr_out(Addr_out[31:0]), 
                 .CPU_MIO(), 
                 .Data_out(Data_out[31:0]), 
                 .inst_out(inst[31:0]), 
                 .mem_w(XLXN_524), 
                 .PC_out(PC[31:0]), 
                 .state(State[4:0]));
   RAM_B  U3 (.addra(XLXN_526[9:0]), 
             .clka(clk_100mhz), 
             .dina(XLXN_529[31:0]), 
             .wea(XLXN_527[0]), 
             .douta(XLXN_525[31:0]));
   MIO_BUS  U4 (.addr_bus(Addr_out[31:0]), 
               .BTN(BTN_OK[3:0]), 
               .clk(clk_100mhz), 
               .counter_out(Counter_out[31:0]), 
               .counter0_out(XLXN_497), 
               .counter1_out(XLXN_470), 
               .counter2_out(XLXN_469), 
               .Cpu_data2bus(Data_out[31:0]), 
               .led_out(LED_out[15:0]), 
               .mem_w(XLXN_524), 
               .ram_data_out(XLXN_525[31:0]), 
               .rst(rst), 
               .SW(SW_OK[15:0]), 
               .counter_we(XLXN_472), 
               .Cpu_data4bus(Data_in[31:0]), 
               .data_ram_we(XLXN_527[0]), 
               .GPIOe0000000_we(XLXN_443), 
               .GPIOf0000000_we(GPIOF0), 
               .Peripheral_in(CPI2IO[31:0]), 
               .ram_addr(XLXN_526[9:0]), 
               .ram_data_in(XLXN_529[31:0]));
   Multi_8CH32  U5 (.clk(IO_clk), 
                   .Data0(CPI2IO[31:0]), 
                   .data1({N0, N0, PC[31:2]}), 
                   .data2(inst[31:0]), 
                   .data3(Counter_out[31:0]), 
                   .data4(Addr_out[31:0]), 
                   .data5(Data_out[31:0]), 
                   .data6(Data_in[31:0]), 
                   .data7(PC[31:0]), 
                   .EN(XLXN_443), 
                   .LES({N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0}), 
                   .point_in({Div[31:0], Div[31:13], State[4:0], N0, N0, N0, 
         N0, N0, N0, N0, N0}), 
                   .rst(rst), 
                   .Test(SW_OK[7:5]), 
                   .Disp_num(Disp_num[31:0]), 
                   .LE_out(LE_out[7:0]), 
                   .point_out(point_out[7:0]));
   SSeg7_Dev_MUSER_top  U6 (.clk(clk_100mhz), 
                           .flash(Div[25]), 
                           .Hexs(Disp_num[31:0]), 
                           .LES(LE_out[7:0]), 
                           .point(point_out[7:0]), 
                           .rst(rst), 
                           .Start(Div[20]), 
                           .SW0(SW_OK[0]), 
                           .seg_clk(seg_clk), 
                           .seg_clrn(seg_clrn), 
                           .SEG_PEN(SEG_PEN), 
                           .seg_sout(seg_sout));
   SPIO  U7 (.clk(IO_clk), 
            .EN(GPIOF0), 
            .P_Data(CPI2IO[31:0]), 
            .rst(rst), 
            .Start(Div[20]), 
            .counter_set(XLXN_491[1:0]), 
            .GPIOf0(), 
            .led_clk(led_clk), 
            .led_clrn(led_clrn), 
            .LED_out(LED_out[15:0]), 
            .LED_PEN(LED_PEN), 
            .led_sout(led_sout));
   clk_div  U8 (.clk(clk_100mhz), 
               .rst(rst), 
               .SW2(SW_OK[2]), 
               .clkdiv(Div[31:0]), 
               .Clk_CPU(Clk_CPU));
   SAnti_jitter  U9 (.clk(clk_100mhz), 
                    .Key_y(BTN_y[3:0]), 
                    .readn(readn_DUMMY), 
                    .RSTN(RSTN), 
                    .SW(SW[15:0]), 
                    .BTN_OK(BTN_OK[3:0]), 
                    .CR(CR), 
                    .Key_out(XLXN_29[4:0]), 
                    .Key_ready(RDY_DUMMY), 
                    .Key_x(BTN_x[4:0]), 
                    .pulse_out(Pulse[3:0]), 
                    .rst(rst), 
                    .SW_OK(SW_OK[15:0]));
   Counter_x  U10 (.clk(IO_clk), 
                  .clk0(Div[8]), 
                  .clk1(Div[9]), 
                  .clk2(Div[11]), 
                  .counter_ch(XLXN_491[1:0]), 
                  .counter_val(CPI2IO[31:0]), 
                  .counter_we(XLXN_472), 
                  .rst(rst), 
                  .counter_out(Counter_out[31:0]), 
                  .counter0_OUT(XLXN_497), 
                  .counter1_OUT(XLXN_470), 
                  .counter2_OUT(XLXN_469));
   Seg7_Dev_MUSER_top  U61 (.flash(Div[25]), 
                           .Hexs(Disp_num[31:0]), 
                           .LES(LE_out[7:0]), 
                           .point(point_out[7:0]), 
                           .Scan({SW_OK[1], Div[19:18]}), 
                           .SW0(SW_OK[0]), 
                           .AN(AN[3:0]), 
                           .SEGMENT(SEGMENT[7:0]));
   PIO  U71 (.clk(IO_clk), 
            .EN(GPIOF0), 
            .PData_in(CPU2IO[31:0]), 
            .rst(rst), 
            .counter_set(), 
            .GPIOf0(), 
            .LED_out(LED[7:0]));
   GND  XLXI_13 (.G(N0));
   VCC  XLXI_14 (.P(V5));
   BUF  XLXI_15 (.I(V5), 
                .O(Buzzer));
   INV  XLXI_89 (.I(Clk_CPU), 
                .O(IO_clk));
endmodule
