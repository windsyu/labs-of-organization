////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Seg7_Dev.vf
// /___/   /\     Timestamp : 05/14/2019 15:12:39
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath C:/org/Exp08/Exception/Code -intstyle ise -family kintex7 -verilog C:/org/Exp08/Exception/Seg7_Dev.vf -w C:/org/Exp08/Exception/Code/Seg7_Dev.sch
//Design Name: Seg7_Dev
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module MC14495_ZJU_MUSER_Seg7_Dev(D0, 
                                  D1, 
                                  D2, 
                                  D3, 
                                  LE, 
                                  point, 
                                  a, 
                                  b, 
                                  c, 
                                  d, 
                                  e, 
                                  f, 
                                  g, 
                                  p);

    input D0;
    input D1;
    input D2;
    input D3;
    input LE;
    input point;
   output a;
   output b;
   output c;
   output d;
   output e;
   output f;
   output g;
   output p;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_19;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_43;
   wire XLXN_44;
   wire XLXN_45;
   wire XLXN_46;
   wire XLXN_47;
   wire XLXN_48;
   wire XLXN_49;
   wire _D0;
   wire _D1;
   wire _D2;
   wire _D3;
   
   AND4  XLXI_1 (.I0(_D0), 
                .I1(_D1), 
                .I2(D2), 
                .I3(D3), 
                .O(XLXN_2));
   AND4  XLXI_2 (.I0(D0), 
                .I1(D1), 
                .I2(D2), 
                .I3(_D3), 
                .O(XLXN_1));
   AND4  XLXI_17 (.I0(D0), 
                 .I1(_D1), 
                 .I2(D2), 
                 .I3(_D3), 
                 .O(XLXN_15));
   AND4  XLXI_21 (.I0(D0), 
                 .I1(_D1), 
                 .I2(_D2), 
                 .I3(_D3), 
                 .O(XLXN_21));
   OR3  XLXI_22 (.I0(XLXN_2), 
                .I1(XLXN_1), 
                .I2(XLXN_3), 
                .O(XLXN_49));
   OR3  XLXI_23 (.I0(XLXN_8), 
                .I1(XLXN_7), 
                .I2(XLXN_9), 
                .O(XLXN_47));
   OR3  XLXI_24 (.I0(XLXN_13), 
                .I1(XLXN_12), 
                .I2(XLXN_17), 
                .O(XLXN_45));
   OR4  XLXI_25 (.I0(XLXN_4), 
                .I1(XLXN_5), 
                .I2(XLXN_6), 
                .I3(XLXN_19), 
                .O(XLXN_48));
   OR4  XLXI_26 (.I0(XLXN_10), 
                .I1(XLXN_11), 
                .I2(XLXN_22), 
                .I3(XLXN_21), 
                .O(XLXN_46));
   OR4  XLXI_27 (.I0(XLXN_16), 
                .I1(XLXN_17), 
                .I2(XLXN_14), 
                .I3(XLXN_15), 
                .O(XLXN_44));
   OR4  XLXI_28 (.I0(XLXN_18), 
                .I1(XLXN_19), 
                .I2(XLXN_22), 
                .I3(XLXN_21), 
                .O(XLXN_43));
   INV  XLXI_29 (.I(D3), 
                .O(_D3));
   INV  XLXI_30 (.I(D2), 
                .O(_D2));
   INV  XLXI_31 (.I(D1), 
                .O(_D1));
   INV  XLXI_32 (.I(D0), 
                .O(_D0));
   AND3  XLXI_33 (.I0(_D0), 
                 .I1(D1), 
                 .I2(D2), 
                 .O(XLXN_14));
   AND3  XLXI_34 (.I0(_D0), 
                 .I1(D2), 
                 .I2(D3), 
                 .O(XLXN_17));
   AND3  XLXI_35 (.I0(D0), 
                 .I1(D1), 
                 .I2(D3), 
                 .O(XLXN_16));
   AND3  XLXI_36 (.I0(D1), 
                 .I1(D2), 
                 .I2(D3), 
                 .O(XLXN_13));
   AND3  XLXI_37 (.I0(D0), 
                 .I1(D1), 
                 .I2(D2), 
                 .O(XLXN_11));
   AND3  XLXI_38 (.I0(D0), 
                 .I1(_D1), 
                 .I2(_D2), 
                 .O(XLXN_8));
   AND3  XLXI_39 (.I0(_D1), 
                 .I1(D2), 
                 .I2(_D3), 
                 .O(XLXN_7));
   AND2  XLXI_40 (.I0(D0), 
                 .I1(_D3), 
                 .O(XLXN_9));
   AND3  XLXI_41 (.I0(D0), 
                 .I1(_D2), 
                 .I2(_D3), 
                 .O(XLXN_6));
   AND3  XLXI_42 (.I0(D1), 
                 .I1(_D2), 
                 .I2(_D3), 
                 .O(XLXN_5));
   AND3  XLXI_43 (.I0(D0), 
                 .I1(D1), 
                 .I2(_D3), 
                 .O(XLXN_4));
   AND3  XLXI_44 (.I0(_D1), 
                 .I1(_D2), 
                 .I2(_D3), 
                 .O(XLXN_3));
   INV  XLXI_45 (.I(point), 
                .O(p));
   OR2  XLXI_46 (.I0(LE), 
                .I1(XLXN_49), 
                .O(g));
   OR2  XLXI_47 (.I0(LE), 
                .I1(XLXN_48), 
                .O(f));
   OR2  XLXI_48 (.I0(LE), 
                .I1(XLXN_47), 
                .O(e));
   OR2  XLXI_49 (.I0(LE), 
                .I1(XLXN_46), 
                .O(d));
   OR2  XLXI_50 (.I0(LE), 
                .I1(XLXN_45), 
                .O(c));
   OR2  XLXI_51 (.I0(LE), 
                .I1(XLXN_44), 
                .O(b));
   OR2  XLXI_52 (.I0(LE), 
                .I1(XLXN_43), 
                .O(a));
   AND4  XLXI_53 (.I0(D0), 
                 .I1(_D1), 
                 .I2(D2), 
                 .I3(D3), 
                 .O(XLXN_19));
   AND4  XLXI_55 (.I0(_D0), 
                 .I1(_D1), 
                 .I2(D2), 
                 .I3(_D3), 
                 .O(XLXN_22));
   AND4  XLXI_56 (.I0(D0), 
                 .I1(D1), 
                 .I2(_D2), 
                 .I3(D3), 
                 .O(XLXN_18));
   AND4  XLXI_57 (.I0(_D0), 
                 .I1(D1), 
                 .I2(_D2), 
                 .I3(_D3), 
                 .O(XLXN_12));
   AND4  XLXI_58 (.I0(_D0), 
                 .I1(D1), 
                 .I2(_D2), 
                 .I3(D3), 
                 .O(XLXN_10));
endmodule
`timescale 1ns / 1ps

module MUX4T1_4_MUSER_Seg7_Dev(I0, 
                               I1, 
                               I2, 
                               I3, 
                               s, 
                               o);

    input [3:0] I0;
    input [3:0] I1;
    input [3:0] I2;
    input [3:0] I3;
    input [1:0] s;
   output [3:0] o;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_9;
   wire XLXN_12;
   wire XLXN_51;
   wire XLXN_52;
   wire XLXN_58;
   wire XLXN_59;
   wire XLXN_61;
   wire XLXN_62;
   wire XLXN_73;
   wire XLXN_74;
   wire XLXN_76;
   wire XLXN_77;
   wire XLXN_78;
   wire XLXN_79;
   wire XLXN_81;
   wire XLXN_82;
   
   AND2  XLXI_1 (.I0(I0[0]), 
                .I1(XLXN_5), 
                .O(XLXN_1));
   AND2  XLXI_2 (.I0(I1[0]), 
                .I1(XLXN_6), 
                .O(XLXN_2));
   AND2  XLXI_3 (.I0(I2[0]), 
                .I1(XLXN_51), 
                .O(XLXN_3));
   AND2  XLXI_4 (.I0(I3[0]), 
                .I1(XLXN_52), 
                .O(XLXN_4));
   OR4  XLXI_5 (.I0(XLXN_4), 
               .I1(XLXN_3), 
               .I2(XLXN_2), 
               .I3(XLXN_1), 
               .O(o[0]));
   AND2  XLXI_6 (.I0(XLXN_12), 
                .I1(XLXN_9), 
                .O(XLXN_5));
   AND2  XLXI_7 (.I0(s[0]), 
                .I1(XLXN_9), 
                .O(XLXN_6));
   AND2  XLXI_8 (.I0(s[1]), 
                .I1(XLXN_12), 
                .O(XLXN_51));
   AND2  XLXI_9 (.I0(s[1]), 
                .I1(s[0]), 
                .O(XLXN_52));
   INV  XLXI_10 (.I(s[1]), 
                .O(XLXN_9));
   INV  XLXI_11 (.I(s[0]), 
                .O(XLXN_12));
   AND2  XLXI_17 (.I0(I0[1]), 
                 .I1(XLXN_5), 
                 .O(XLXN_58));
   AND2  XLXI_18 (.I0(I1[1]), 
                 .I1(XLXN_6), 
                 .O(XLXN_59));
   AND2  XLXI_19 (.I0(I2[1]), 
                 .I1(XLXN_51), 
                 .O(XLXN_61));
   AND2  XLXI_20 (.I0(I3[1]), 
                 .I1(XLXN_52), 
                 .O(XLXN_62));
   OR4  XLXI_21 (.I0(XLXN_62), 
                .I1(XLXN_61), 
                .I2(XLXN_59), 
                .I3(XLXN_58), 
                .O(o[1]));
   AND2  XLXI_32 (.I0(I0[2]), 
                 .I1(XLXN_5), 
                 .O(XLXN_73));
   AND2  XLXI_33 (.I0(I1[2]), 
                 .I1(XLXN_6), 
                 .O(XLXN_74));
   AND2  XLXI_34 (.I0(I2[2]), 
                 .I1(XLXN_51), 
                 .O(XLXN_76));
   AND2  XLXI_35 (.I0(I3[2]), 
                 .I1(XLXN_52), 
                 .O(XLXN_77));
   OR4  XLXI_36 (.I0(XLXN_77), 
                .I1(XLXN_76), 
                .I2(XLXN_74), 
                .I3(XLXN_73), 
                .O(o[2]));
   AND2  XLXI_37 (.I0(I0[3]), 
                 .I1(XLXN_5), 
                 .O(XLXN_78));
   AND2  XLXI_38 (.I0(I1[3]), 
                 .I1(XLXN_6), 
                 .O(XLXN_79));
   AND2  XLXI_39 (.I0(I2[3]), 
                 .I1(XLXN_51), 
                 .O(XLXN_81));
   AND2  XLXI_40 (.I0(I3[3]), 
                 .I1(XLXN_52), 
                 .O(XLXN_82));
   OR4  XLXI_41 (.I0(XLXN_82), 
                .I1(XLXN_81), 
                .I2(XLXN_79), 
                .I3(XLXN_78), 
                .O(o[3]));
endmodule
`timescale 1ns / 1ps

module MUX8T1_8_MUSER_Seg7_Dev(I0, 
                               I1, 
                               I2, 
                               I3, 
                               I4, 
                               I5, 
                               I6, 
                               I7, 
                               s, 
                               o);

    input [7:0] I0;
    input [7:0] I1;
    input [7:0] I2;
    input [7:0] I3;
    input [7:0] I4;
    input [7:0] I5;
    input [7:0] I6;
    input [7:0] I7;
    input [2:0] s;
   output [7:0] o;
   
   wire [3:0] o0;
   wire [3:0] o1;
   wire [3:0] o2;
   wire [3:0] o3;
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_26;
   
   MUX4T1_4_MUSER_Seg7_Dev  XLXI_1 (.I0(I0[3:0]), 
                                   .I1(I1[3:0]), 
                                   .I2(I2[3:0]), 
                                   .I3(I3[3:0]), 
                                   .s(s[1:0]), 
                                   .o(o0[3:0]));
   MUX4T1_4_MUSER_Seg7_Dev  XLXI_2 (.I0(I4[3:0]), 
                                   .I1(I5[3:0]), 
                                   .I2(I6[3:0]), 
                                   .I3(I7[3:0]), 
                                   .s(s[1:0]), 
                                   .o(o1[3:0]));
   INV  XLXI_5 (.I(s[2]), 
               .O(XLXN_26));
   AND2  XLXI_6 (.I0(o0[0]), 
                .I1(XLXN_26), 
                .O(XLXN_1));
   AND2  XLXI_7 (.I0(o1[0]), 
                .I1(s[2]), 
                .O(XLXN_2));
   AND2  XLXI_8 (.I0(o0[1]), 
                .I1(XLXN_26), 
                .O(XLXN_3));
   AND2  XLXI_9 (.I0(o1[1]), 
                .I1(s[2]), 
                .O(XLXN_4));
   AND2  XLXI_10 (.I0(o0[2]), 
                 .I1(XLXN_26), 
                 .O(XLXN_5));
   AND2  XLXI_11 (.I0(o1[2]), 
                 .I1(s[2]), 
                 .O(XLXN_6));
   AND2  XLXI_12 (.I0(o0[3]), 
                 .I1(XLXN_26), 
                 .O(XLXN_7));
   AND2  XLXI_13 (.I0(o1[3]), 
                 .I1(s[2]), 
                 .O(XLXN_8));
   AND2  XLXI_14 (.I0(o2[0]), 
                 .I1(XLXN_26), 
                 .O(XLXN_9));
   AND2  XLXI_15 (.I0(o3[0]), 
                 .I1(s[2]), 
                 .O(XLXN_10));
   AND2  XLXI_16 (.I0(o2[1]), 
                 .I1(XLXN_26), 
                 .O(XLXN_11));
   AND2  XLXI_17 (.I0(o3[1]), 
                 .I1(s[2]), 
                 .O(XLXN_12));
   AND2  XLXI_18 (.I0(o2[2]), 
                 .I1(XLXN_26), 
                 .O(XLXN_13));
   AND2  XLXI_19 (.I0(o3[2]), 
                 .I1(s[2]), 
                 .O(XLXN_14));
   AND2  XLXI_20 (.I0(o2[3]), 
                 .I1(XLXN_26), 
                 .O(XLXN_15));
   AND2  XLXI_21 (.I0(o3[3]), 
                 .I1(s[2]), 
                 .O(XLXN_16));
   OR2  XLXI_24 (.I0(XLXN_2), 
                .I1(XLXN_1), 
                .O(o[0]));
   OR2  XLXI_25 (.I0(XLXN_4), 
                .I1(XLXN_3), 
                .O(o[1]));
   OR2  XLXI_26 (.I0(XLXN_6), 
                .I1(XLXN_5), 
                .O(o[2]));
   OR2  XLXI_27 (.I0(XLXN_8), 
                .I1(XLXN_7), 
                .O(o[3]));
   OR2  XLXI_28 (.I0(XLXN_10), 
                .I1(XLXN_9), 
                .O(o[4]));
   OR2  XLXI_29 (.I0(XLXN_12), 
                .I1(XLXN_11), 
                .O(o[5]));
   OR2  XLXI_30 (.I0(XLXN_14), 
                .I1(XLXN_13), 
                .O(o[6]));
   OR2  XLXI_31 (.I0(XLXN_16), 
                .I1(XLXN_15), 
                .O(o[7]));
   MUX4T1_4_MUSER_Seg7_Dev  XLXI_32 (.I0(I0[7:4]), 
                                    .I1(I1[7:4]), 
                                    .I2(I2[7:4]), 
                                    .I3(I3[7:4]), 
                                    .s(s[1:0]), 
                                    .o(o2[3:0]));
   MUX4T1_4_MUSER_Seg7_Dev  XLXI_33 (.I0(I4[7:4]), 
                                    .I1(I5[7:4]), 
                                    .I2(I6[7:4]), 
                                    .I3(I7[7:4]), 
                                    .s(s[1:0]), 
                                    .o(o3[3:0]));
endmodule
`timescale 1ns / 1ps

module ScanSync_MUSER_Seg7_Dev(Hexs, 
                               LES, 
                               point, 
                               Scan, 
                               AN, 
                               Hexo, 
                               LE, 
                               p);

    input [31:0] Hexs;
    input [7:0] LES;
    input [7:0] point;
    input [2:0] Scan;
   output [3:0] AN;
   output [3:0] Hexo;
   output LE;
   output p;
   
   wire [7:0] COM;
   wire G0;
   wire [7:0] Hex;
   wire V5;
   
   VCC  XLXI_4 (.P(V5));
   GND  XLXI_5 (.G(G0));
   BUF  XLXI_6 (.I(COM[7]), 
               .O(LE));
   BUF  XLXI_7 (.I(COM[6]), 
               .O(p));
   MUX8T1_8_MUSER_Seg7_Dev  XLXI_8 (.I0({Hexs[3:0], G0, G0, G0, G0}), 
                                   .I1({Hexs[7:4], G0, G0, G0, G0}), 
                                   .I2({Hexs[11:8], G0, G0, G0, G0}), 
                                   .I3({Hexs[15:12], G0, G0, G0, G0}), 
                                   .I4({Hexs[19:16], G0, G0, G0, G0}), 
                                   .I5({Hexs[23:20], G0, G0, G0, G0}), 
                                   .I6({Hexs[27:24], G0, G0, G0, G0}), 
                                   .I7({Hexs[31:28], G0, G0, G0, G0}), 
                                   .s(Scan[2:0]), 
                                   .o(Hex[7:0]));
   MUX8T1_8_MUSER_Seg7_Dev  XLXI_9 (.I0({LES[0], point[0], G0, G0, V5, V5, V5, 
         G0}), 
                                   .I1({LES[1], point[1], G0, G0, V5, V5, G0, 
         V5}), 
                                   .I2({LES[2], point[2], G0, G0, V5, G0, V5, 
         V5}), 
                                   .I3({LES[3], point[3], G0, G0, G0, V5, V5, 
         V5}), 
                                   .I4({LES[4], point[4], G0, G0, V5, V5, V5, 
         G0}), 
                                   .I5({LES[5], point[5], G0, G0, V5, V5, G0, 
         V5}), 
                                   .I6({LES[6], point[6], G0, G0, V5, G0, V5, 
         V5}), 
                                   .I7({LES[7], point[7], G0, G0, G0, V5, V5, 
         V5}), 
                                   .s(Scan[2:0]), 
                                   .o(COM[7:0]));
   BUF  XLXI_12 (.I(COM[0]), 
                .O(AN[0]));
   BUF  XLXI_13 (.I(COM[1]), 
                .O(AN[1]));
   BUF  XLXI_14 (.I(COM[2]), 
                .O(AN[2]));
   BUF  XLXI_15 (.I(COM[3]), 
                .O(AN[3]));
   BUF  XLXI_16 (.I(Hex[7]), 
                .O(Hexo[3]));
   BUF  XLXI_17 (.I(Hex[6]), 
                .O(Hexo[2]));
   BUF  XLXI_18 (.I(Hex[5]), 
                .O(Hexo[1]));
   BUF  XLXI_19 (.I(Hex[4]), 
                .O(Hexo[0]));
endmodule
`timescale 1ns / 1ps

module Seg7_Dev(flash, 
                Hexs, 
                LES, 
                point, 
                Scan, 
                SW0, 
                AN, 
                SEGMENT);

    input flash;
    input [31:0] Hexs;
    input [7:0] LES;
    input [7:0] point;
    input [2:0] Scan;
    input SW0;
   output [3:0] AN;
   output [7:0] SEGMENT;
   
   wire G0;
   wire [3:0] Hex;
   wire [7:0] Seg_map;
   wire [7:0] SEG_TXT;
   wire V5;
   wire XLXN_12;
   wire XLXN_19;
   wire XLXN_29;
   
   ScanSync_MUSER_Seg7_Dev  XLXI_1 (.Hexs(Hexs[31:0]), 
                                   .LES(LES[7:0]), 
                                   .point(point[7:0]), 
                                   .Scan(Scan[2:0]), 
                                   .AN(AN[3:0]), 
                                   .Hexo(Hex[3:0]), 
                                   .LE(XLXN_19), 
                                   .p(XLXN_12));
   MC14495_ZJU_MUSER_Seg7_Dev  XLXI_2 (.D0(Hex[0]), 
                                      .D1(Hex[1]), 
                                      .D2(Hex[2]), 
                                      .D3(Hex[3]), 
                                      .LE(XLXN_29), 
                                      .point(XLXN_12), 
                                      .a(SEG_TXT[0]), 
                                      .b(SEG_TXT[1]), 
                                      .c(SEG_TXT[2]), 
                                      .d(SEG_TXT[3]), 
                                      .e(SEG_TXT[4]), 
                                      .f(SEG_TXT[5]), 
                                      .g(SEG_TXT[6]), 
                                      .p(SEG_TXT[7]));
   AND2  XLXI_3 (.I0(XLXN_19), 
                .I1(flash), 
                .O(XLXN_29));
   Seg_map  XLXI_4 (.Hexs(Hexs[31:0]), 
                   .Scan(Scan[2:0]), 
                   .Seg_map(Seg_map[7:0]));
   VCC  XLXI_6 (.P(V5));
   GND  XLXI_7 (.G(G0));
   MUX2T1_8  XLXI_8 (.I0(Seg_map[7:0]), 
                    .I1(SEG_TXT[7:0]), 
                    .s(SW0), 
                    .o(SEGMENT[7:0]));
endmodule
